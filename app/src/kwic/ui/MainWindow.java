/*
 * uiView.java
 */
package kwic.ui;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.DefaultListModel;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.ListModel;
import kwic.index.IndexList;

/**
 * The application's main frame.
 */
public class MainWindow extends FrameView {

   public MainWindow(SingleFrameApplication app) {
      super(app);

      initComponents();

      // status bar initialization - message timeout, idle icon and busy animation, etc
      ResourceMap resourceMap = getResourceMap();
      int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
      messageTimer = new Timer(messageTimeout, new ActionListener() {

         public void actionPerformed(ActionEvent e) {
            _statusMessageLabel.setText("");
         }
      });
      messageTimer.setRepeats(false);
      int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
      for (int i = 0; i < busyIcons.length; i++) {
         busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
      }
      busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {

         public void actionPerformed(ActionEvent e) {
            busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
            _statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
         }
      });
      idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
      _statusAnimationLabel.setIcon(idleIcon);
      _progressBar.setVisible(false);

      // connecting action tasks to status bar via TaskMonitor
      TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
      taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

         public void propertyChange(java.beans.PropertyChangeEvent evt) {
            String propertyName = evt.getPropertyName();
            if ("started".equals(propertyName)) {
               if (!busyIconTimer.isRunning()) {
                  _statusAnimationLabel.setIcon(busyIcons[0]);
                  busyIconIndex = 0;
                  busyIconTimer.start();
               }
               _progressBar.setVisible(true);
               _progressBar.setIndeterminate(true);
            } else if ("done".equals(propertyName)) {
               busyIconTimer.stop();
               _statusAnimationLabel.setIcon(idleIcon);
               _progressBar.setVisible(false);
               _progressBar.setValue(0);
            } else if ("message".equals(propertyName)) {
               String text = (String) (evt.getNewValue());
               _statusMessageLabel.setText((text == null) ? "" : text);
               messageTimer.restart();
            } else if ("progress".equals(propertyName)) {
               int value = (Integer) (evt.getNewValue());
               _progressBar.setVisible(true);
               _progressBar.setIndeterminate(false);
               _progressBar.setValue(value);
            }
         }
      });
   }

   @Action
   public void showAboutBox() {
      if (aboutBox == null) {
         JFrame mainFrame = Main.getApplication().getMainFrame();
         aboutBox = new AboutBox(mainFrame);
         aboutBox.setLocationRelativeTo(mainFrame);
      }
      Main.getApplication().show(aboutBox);
   }

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      _mainPanel = new javax.swing.JPanel();
      jTextField1 = new javax.swing.JTextField();
      jButton1 = new javax.swing.JButton();
      jScrollPane1 = new javax.swing.JScrollPane();
      jTable1 = new javax.swing.JTable();
      _menu = new javax.swing.JMenuBar();
      javax.swing.JMenu _fileMenu = new javax.swing.JMenu();
      _createMenuItem = new javax.swing.JMenuItem();
      _loadMenuItem = new javax.swing.JMenuItem();
      _saveMenuItem = new javax.swing.JMenuItem();
      jSeparator1 = new javax.swing.JPopupMenu.Separator();
      javax.swing.JMenuItem _exitMenuItem = new javax.swing.JMenuItem();
      javax.swing.JMenu _helpMenu = new javax.swing.JMenu();
      javax.swing.JMenuItem _aboutMenuItem = new javax.swing.JMenuItem();
      _statusPanel = new javax.swing.JPanel();
      javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
      _statusMessageLabel = new javax.swing.JLabel();
      _statusAnimationLabel = new javax.swing.JLabel();
      _progressBar = new javax.swing.JProgressBar();

      _mainPanel.setMinimumSize(new java.awt.Dimension(100, 110));
      _mainPanel.setName("_mainPanel"); // NOI18N
      _mainPanel.setPreferredSize(new java.awt.Dimension(939, 500));

      org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(kwic.ui.Main.class).getContext().getResourceMap(MainWindow.class);
      jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
      jTextField1.setName("jTextField1"); // NOI18N

      jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
      jButton1.setName("jButton1"); // NOI18N

      jScrollPane1.setName("jScrollPane1"); // NOI18N

      jTable1.setModel(new javax.swing.table.DefaultTableModel(
         new Object [][] {

         },
         new String [] {
            "Index", "Description", "URL"
         }
      ) {
         Class[] types = new Class [] {
            java.lang.String.class, java.lang.String.class, java.lang.String.class
         };
         boolean[] canEdit = new boolean [] {
            false, false, false
         };

         public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
         }

         public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
         }
      });
      jTable1.setName("jTable1"); // NOI18N
      jScrollPane1.setViewportView(jTable1);

      javax.swing.GroupLayout _mainPanelLayout = new javax.swing.GroupLayout(_mainPanel);
      _mainPanel.setLayout(_mainPanelLayout);
      _mainPanelLayout.setHorizontalGroup(
         _mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(_mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(_mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 544, Short.MAX_VALUE)
               .addGroup(_mainPanelLayout.createSequentialGroup()
                  .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                  .addComponent(jButton1)))
            .addContainerGap())
      );
      _mainPanelLayout.setVerticalGroup(
         _mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(_mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(_mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
               .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
            .addContainerGap())
      );

      _menu.setName("_menu"); // NOI18N

      _fileMenu.setText(resourceMap.getString("_fileMenu.text")); // NOI18N
      _fileMenu.setName("_fileMenu"); // NOI18N

      _createMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
      _createMenuItem.setText(resourceMap.getString("_createMenuItem.text")); // NOI18N
      _createMenuItem.setToolTipText(resourceMap.getString("_createMenuItem.toolTipText")); // NOI18N
      _createMenuItem.setName("_createMenuItem"); // NOI18N
      _fileMenu.add(_createMenuItem);

      javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(kwic.ui.Main.class).getContext().getActionMap(MainWindow.class, this);
      _loadMenuItem.setAction(actionMap.get("loadFile")); // NOI18N
      _loadMenuItem.setText(resourceMap.getString("_loadMenuItem.text")); // NOI18N
      _loadMenuItem.setToolTipText(resourceMap.getString("_loadMenuItem.toolTipText")); // NOI18N
      _loadMenuItem.setName("_loadMenuItem"); // NOI18N
      _fileMenu.add(_loadMenuItem);

      _saveMenuItem.setAction(actionMap.get("saveIndex")); // NOI18N
      _saveMenuItem.setText(resourceMap.getString("_saveMenuItem.text")); // NOI18N
      _saveMenuItem.setToolTipText(resourceMap.getString("_saveMenuItem.toolTipText")); // NOI18N
      _saveMenuItem.setName("_saveMenuItem"); // NOI18N
      _fileMenu.add(_saveMenuItem);

      jSeparator1.setName("jSeparator1"); // NOI18N
      _fileMenu.add(jSeparator1);

      _exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
      _exitMenuItem.setName("_exitMenuItem"); // NOI18N
      _fileMenu.add(_exitMenuItem);

      _menu.add(_fileMenu);

      _helpMenu.setText(resourceMap.getString("_helpMenu.text")); // NOI18N
      _helpMenu.setName("_helpMenu"); // NOI18N

      _aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
      _aboutMenuItem.setName("_aboutMenuItem"); // NOI18N
      _helpMenu.add(_aboutMenuItem);

      _menu.add(_helpMenu);

      _statusPanel.setName("_statusPanel"); // NOI18N

      statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

      _statusMessageLabel.setName("_statusMessageLabel"); // NOI18N

      _statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
      _statusAnimationLabel.setName("_statusAnimationLabel"); // NOI18N

      _progressBar.setName("_progressBar"); // NOI18N

      javax.swing.GroupLayout _statusPanelLayout = new javax.swing.GroupLayout(_statusPanel);
      _statusPanel.setLayout(_statusPanelLayout);
      _statusPanelLayout.setHorizontalGroup(
         _statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
         .addGroup(_statusPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(_statusMessageLabel)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 384, Short.MAX_VALUE)
            .addComponent(_progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(_statusAnimationLabel)
            .addContainerGap())
      );
      _statusPanelLayout.setVerticalGroup(
         _statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
         .addGroup(_statusPanelLayout.createSequentialGroup()
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(_statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
               .addComponent(_statusMessageLabel)
               .addComponent(_statusAnimationLabel)
               .addComponent(_progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(3, 3, 3))
      );

      setComponent(_mainPanel);
      setMenuBar(_menu);
      setStatusBar(_statusPanel);
   }// </editor-fold>//GEN-END:initComponents

   @Action
   public void loadFile() {
      IndexViewDialog ivd = new IndexViewDialog(null, true);
      ivd.setVisible(true);
      //FIXME pull the index value out from the dialog
   }
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JMenuItem _createMenuItem;
   private javax.swing.JMenuItem _loadMenuItem;
   private javax.swing.JPanel _mainPanel;
   private javax.swing.JMenuBar _menu;
   private javax.swing.JProgressBar _progressBar;
   private javax.swing.JMenuItem _saveMenuItem;
   private javax.swing.JLabel _statusAnimationLabel;
   private javax.swing.JLabel _statusMessageLabel;
   private javax.swing.JPanel _statusPanel;
   private javax.swing.JButton jButton1;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JPopupMenu.Separator jSeparator1;
   private javax.swing.JTable jTable1;
   private javax.swing.JTextField jTextField1;
   // End of variables declaration//GEN-END:variables
   private final Timer messageTimer;
   private final Timer busyIconTimer;
   private final Icon idleIcon;
   private final Icon[] busyIcons = new Icon[15];
   private int busyIconIndex = 0;
   private JDialog aboutBox;
   private ListModel _inputModel = new DefaultListModel();
   private ListModel _indexModel = new DefaultListModel();
   private IndexList _index = null;
}
